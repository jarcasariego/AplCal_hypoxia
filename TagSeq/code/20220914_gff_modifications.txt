#!/bin/bash

#determine annotation types and display counts

GFF_FILE="/scratch/jeirinlo/jrodr979/Aplysia_hypoxia/AplCal3.0_genome/GCF_000002075.1/genomic.gff"
genome="/scratch/jeirinlo/jrodr979/Aplysia_hypoxia/AplCal3.0_genome/GCF_000002075.1/unplaced.scaf.fna"

grep -v '^#' ${GFF_FILE} | cut -s -f 3 | sort | uniq -c | sort -rn > all_features.txt

grep $'\tNC_' ${GFF_FILE} > AplCal.mit.gff

# all_features.txt:
256804 exon
 236180 CDS
  64268 cDNA_match
  26667 mRNA
  21467 gene
   4332 region
   1667 lnc_RNA
    421 tRNA
    229 transcript
    110 snoRNA
     70 pseudogene
     66 snRNA
     30 rRNA
      3 guide_RNA

#extract feature types and generate individual gff ignoring mitochondrial 

grep $'\tmRNA\t' ${GFF_FILE} | grep -v '^NC_' > AplCal.GFFannotation.mRNA.gff
grep $'\tgene\t' ${GFF_FILE} | grep -v '^NC_' > AplCal.GFFannotation.gene.gff
grep $'\texon\t' ${GFF_FILE} | grep -v '^NC_' > AplCal.GFFannotation.exon.gff 
grep $'\tCDS\t'  ${GFF_FILE} | grep -v '^NC_' > AplCal.GFFannotation.CDS.gff
grep $'\ttRNA\t' ${GFF_FILE} | grep -v '^NC_' > AplCal.GFFannotation.tRNA.gff
grep $'\tcDNA_match\t' ${GFF_FILE} | grep -v '^NC_' > AplCal.GFFannotation.cDNA.gff
grep $'\tregion\t' ${GFF_FILE} | grep -v '^NC_' > AplCal.GFFannotation.region.gff
grep $'\tlnc_RNA\t' ${GFF_FILE} | grep -v '^NC_' > AplCal.GFFannotation.lncRNA.gff
grep $'\ttranscript\t' ${GFF_FILE} | grep -v '^NC_' > AplCal.GFFannotation.transcript.gff ### ??? 
grep $'\tsnoRNA\t'  ${GFF_FILE} | grep -v '^NC_' > AplCal.GFFannotation.snoRNA.gff
grep $'\tpseudogene\t' ${GFF_FILE} | grep -v '^NC_' > AplCal.GFFannotation.pseudogene.gff
grep $'\tsnRNA\t' ${GFF_FILE} | grep -v '^NC_' > AplCal.GFFannotation.snRNA.gff
grep $'\trRNA\t' ${GFF_FILE} | grep -v '^NC_' > AplCal.GFFannotation.rRNA.gff
grep $'\tguide_RNA\t' ${GFF_FILE} | grep -v '^NC_' > AplCal.GFFannotation.guide_RNA.gff 


##### CREATE OTHER GENOME TRACKS

# extract scaffold lenghts

cat is ${genome} | awk '$0 ~ ">" {if (NR > 1) {print c;} c=0;printf substr($0,2,100) "\t"; } $0 !~ ">" {c+=length($0);} END { print c; }' > AplCal.Chromosome_lenghts.txt

# extract scaffold names  	

awk -F" " '{print $1}' AplCal.Chromosome_lenghts.txt > AplCal.Chromosome-Names.txt

#Sort GFF files for downstream use

sortBed -faidx AplCal.Chromosome-Names.txt -i AplCal.GFFannotation.gene.gff > AplCal.GFFannotation.gene_sorted.gff
sortBed -faidx AplCal.Chromosome-Names.txt -i AplCal.GFFannotation.exon.gff > AplCal.GFFannotation.exon_sorted.gff
sortBed -faidx AplCal.Chromosome-Names.txt -i AplCal.GFFannotation.CDS.gff > AplCal.GFFannotation.CDS_sorted.gff
sortBed -faidx AplCal.Chromosome-Names.txt -i AplCal.GFFannotation.mRNA.gff > AplCal.GFFannotation.mRNA_sorted.gff

# Untranslated regions 

samtools faidx ${genome} #index the genome


flankBed -i AplCal.GFFannotation.gene_sorted.gff -g ${genome}.fai -l 0 -r 2000 -s | awk '{gsub("gene","3prime_UTR",$3); print $0" }'| awk '{if($5-$4 > 3)print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}'| tr ' ' '\t' > AplCal.GFFannotation.3UTR.gff
flankBed -i AplCal.GFFannotation.gene_sorted.gff -g ${genome}.fai -l 2000 -r 0 -s | awk '{gsub("gene","5prime_UTR",$3); print $0 }'| awk '{if($5-$4 > 3)print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}'| tr ' ' '\t' > AplCal.GFFannotation.5UTR.gff

# Create longer UTR regions 3kb

flankBed -i AplCal.GFFannotation.gene_sorted.gff -g ${genome}.fai -l 0 -r 3000 -s | awk '{gsub("gene","3prime_UTR",$3); print $0 }'| awk '{if($5-$4 > 3)print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}'| tr ' ' '\t' > AplCal.GFFannotation.3UTR_3kb.gff
flankBed -i AplCal.GFFannotation.gene_sorted.gff -g ${genome}.fai -l 3000 -r 0 -s | awk '{gsub("gene","5prime_UTR",$3); print $0 }'| awk '{if($5-$4 > 3)print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}'| tr ' ' '\t' > AplCal.GFFannotation.5UTR_3kb.gff


### Remove portions of UTR that overlap with neighboring genes

subtractBed -a AplCal.GFFannotation.3UTR.gff -b AplCal.GFFannotation.gene_sorted.gff > AplCal.GFFannotation.3UTR_corrected.gff 
subtractBed -a AplCal.GFFannotation.5UTR.gff -b AplCal.GFFannotation.gene_sorted.gff > AplCal.GFFannotation.5UTR_corrected.gff 
subtractBed -a AplCal.GFFannotation.3UTR_3kb.gff -b AplCal.GFFannotation.gene_sorted.gff > AplCal.GFFannotation.3UTR_3kb_corrected.gff 
subtractBed -a AplCal.GFFannotation.5UTR_3kb.gff -b AplCal.GFFannotation.gene_sorted.gff > AplCal.GFFannotation.5UTR_3kb_corrected.gff 

### Correct gene and mRNA tracks using extended UTRs

# R.script

library(dplyr)
library(tidyr)

## Fix gene track

gene <- read.delim("UTR_add_extend/AplCal.GFFannotation.gene_sorted.gff", 
           sep = "\t", header = FALSE)

three_UTR <- read.delim("UTR_add_extend/AplCal.GFFannotation.3UTR_corrected.gff", 
                         sep = "\t", header = FALSE)
five_UTR <- read.delim("UTR_add_extend/AplCal.GFFannotation.5UTR_corrected.gff", 
                        sep = "\t", header = FALSE)
mRNA <- read.delim("UTR_add_extend/AplCal.GFFannotation.mRNA_sorted.gff", 
                                sep = "\t", header = FALSE)

## 5' and 3'UTRs locate differently in fw and rev strands so i need to modify the gene track accordingly
gene2 <-merge(three_UTR, five_UTR, by = "V9")
gene2plus <- gene2[which(gene2$V7.x=="+"),]
gene2minus <- gene2[which(gene2$V7.x=="-"),]

head(gene2plus)
names(gene2plus)

geneplus <- gene2plus[,c(2:4,13,6:9,1)]
geneminus <- gene2minus[,c(2:5,14:17,1)]

head(geneplus)

colnames(geneminus) <- c("V1","V2","V3","V4","V5","V6","V7","V8","V9")
colnames(geneplus) <- c("V1","V2","V3","V4","V5","V6","V7","V8","V9")

gene_new <- rbind(geneplus, geneminus)                        

gene_new$V3 <- gsub("3prime_UTR", "gene", gene_new$V3)
gene_new$V3 <- gsub("5prime_UTR", "gene", gene_new$V3)

gene_new$ID <- gene_new$V9
gene_new <- separate(data = gene_new, col = ID, into = "ID", sep = ";")

gene$ID <- gene$V9
gene <- separate(data = gene, col = ID, into = "ID", sep = ";")

gene_new <- gene_new[!duplicated(gene_new$ID), ]

missing_genes <- anti_join(gene, gene_new
                           , by = c("ID"))
gene_new <- rbind(gene_new, missing_genes)

gene_new <- gene_new[,-10]

write.table(gene_new, file = "UTR_add_extend/AplCal.GFFannotation.gene_3UTR_2kb_extended.gff", 
            sep = "\t", row.names=FALSE, col.names=FALSE, quote=FALSE)


### Fix mRNA track
transcript <- mRNA

head(transcript)

trans_sep <- transcript
trans_sep$ID <- trans_sep$V9  
trans_sep <- separate(trans_sep, ID, c("V10", "ID"), sep = ";")
trans_sep$ID <- gsub("Parent", "ID", trans_sep$ID)

gene_sep <- gene_new
gene_sep$ID <- gene_sep$V9
gene_sep <- separate(data = gene_sep, col = ID, into = "ID", sep = ";")

trans_new <- merge(trans_sep, gene_sep, by = "ID")
trans_new <- trans_new[,c(2:4,15:16,7:11,1)]
colnames(trans_new) <- c("V1","V2","V3","V4","V5","V6","V7","V8","V9","V10","ID")
trans_new <- trans_new[!duplicated(trans_new$V10), ]
missing_trans <- anti_join(trans_sep, trans_new, by = c("V10"))
trans_new <- rbind(trans_new, missing_trans)
trans_new <- trans_new[, -c(10:11)]
write.table(trans_new, file = "UTR_add_extend/AplCal.GFFannotation.mRNA_3UTR_2kb_extended.gff", 
            sep = "\t", row.names=FALSE, col.names=FALSE, quote=FALSE)

## Eliminate duplicates from 5' and 3' UTR tracks and fix attributes

five_UTR_new <- five_UTR[!duplicated(five_UTR$V9), ]
five_UTR_new$ID <- five_UTR_new$V9 
five_UTR_new <- separate(five_UTR_new, ID, c("ID"), sep = ";")
five_UTR_new$ID <- gsub("gene", "5utr", five_UTR_new$ID)
five_UTR_new$V9 <- gsub("ID=", "Parent=", five_UTR_new$V9)

five_UTR_new <- five_UTR_new %>%
  mutate(V9 = paste(ID, V9, sep = ";"))
five_UTR_new <- five_UTR_new[, -c(10)]

three_UTR_new <- three_UTR[!duplicated(three_UTR$V9), ]
three_UTR_new$ID <- three_UTR_new$V9 
three_UTR_new <- separate(three_UTR_new, ID, c("ID"), sep = ";")
three_UTR_new$ID <- gsub("gene", "3utr", three_UTR_new$ID)
three_UTR_new$V9 <- gsub("ID=", "Parent=", three_UTR_new$V9)

three_UTR_new <- three_UTR_new %>%
  mutate(V9 = paste(ID, V9, sep = ";"))
three_UTR_new <- three_UTR_new[, -c(10)]


write.table(five_UTR_new, file = "UTR_add_extend/AplCal.GFFannotation.5UTR_uniq.gff", 
            sep = "\t", row.names=FALSE, col.names=FALSE, quote=FALSE)
write.table(three_UTR_new, file = "UTR_add_extend/AplCal.GFFannotation.3UTR_uniq.gff", 
            sep = "\t", row.names=FALSE, col.names=FALSE, quote=FALSE)

#!/bin/bash

# Create new gff file

cat \
AplCal.GFFannotation.exon.gff \
AplCal.GFFannotation.CDS.gff \
AplCal.GFFannotation.cDNA.gff \
AplCal.GFFannotation.mRNA_3UTR_2kb_extended.gff \
AplCal.GFFannotation.gene_3UTR_2kb_extended.gff \
AplCal.GFFannotation.region.gff \
AplCal.GFFannotation.lncRNA.gff \
AplCal.GFFannotation.tRNA.gff \
AplCal.GFFannotation.transcript.gff \
AplCal.GFFannotation.snoRNA.gff \
AplCal.GFFannotation.pseudogene.gff \
AplCal.GFFannotation.snRNA.gff \
AplCal.GFFannotation.rRNA.gff \
AplCal.GFFannotation.guide_RNA.gff \
| sortBed -i - \
| uniq \
> AplCal.genomic.UTRextended_JARC.gff

gffread -F -w AplCal_UTRExt_gff_trans.fa -g ${genome} AplCal.genomic.UTRextended_JARC.gff
